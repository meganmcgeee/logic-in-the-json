"use strict";
const logging_helper_1 = require("../core/logging-helper");
const Logger = "NODE";
class Node {
    constructor(id, socketHandler) {
        this.id = id;
        this.socketHandler = socketHandler;
        this.requests = {};
    }
    forward(request) {
        console.log("NODE " + this.id + " MSG-ID: " + request.id() + " Forwarding");
        this.requests[request.id()] = request;
        this.socketHandler.send(request.toTCP(), request.id());
    }
    handlingRequest() {
        return (Object.keys(this.requests).length > 0);
    }
    onReply(message, messageID) {
        let self = this;
        console.log("NODE " + this.id + " MSG-ID: " + messageID + " ReplyReceived");
        let request = this.requests[messageID];
        if (request === null) {
            logging_helper_1.LoggingHelper.info(Logger, "No matching messageID for reply: " + messageID);
        }
        else {
            delete self.requests[messageID];
            try {
                request.sourceSocket.write(message);
            }
            catch (e) {
                logging_helper_1.LoggingHelper.error(Logger, "Error writing: " + e);
            }
        }
    }
}
exports.Node = Node;
//# sourceMappingURL=node.js.map