import { ProxyType } from "./bst-proxy";
export declare class BSTConfig {
    configuration: any;
    process: any;
    static load(): Promise<BSTConfig>;
    save(): void;
    static getBstVersion(): any;
    sourceID(): string;
    secretKey(): string;
    applicationID(): string;
    updateApplicationID(applicationID: string): void;
    commit(): void;
    private loadFromJSON(config);
    private static configDirectory();
    private static configPath();
    private static bootstrapIfNeeded();
    private static updateConfig(config);
    private static saveConfig(config);
    private static createConfig(nodeID?);
    private static createSpokesPipe(id, secretKey);
    private static createExternalResources(nodeID?);
}
export declare class BSTProcess {
    port: number;
    proxyType: ProxyType;
    pid: number;
    constructor();
    static running(): BSTProcess;
    private static isRunning(pid);
    static processPath(): string;
    static run(port: number, proxyType: ProxyType, pid: number): BSTProcess;
    kill(): boolean;
    private loadJSON(json);
    private json();
}
